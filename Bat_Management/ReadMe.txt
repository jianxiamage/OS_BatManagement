本工具介绍
1.主要功能
  1.1 远程执行命令
      功能简介：用户可以通过给定参数:(目标IP 指定命令),执行脚本,达到远程执行命令的目的 
      执行脚本:remote_cmd_param.sh

  1.2 批量远程执行命令
      功能简介:用户可以通过给定文件:hostlist.txt 写入自定义的ip列表,执行脚本，达到批量远程执行命令的目的
      执行脚本:remote_cmd_bat.sh

  1.3 远程执行脚本
      功能简介：用户可以通过给定参数:(目标IP 指定脚本或默认待定),执行脚本,达到远程执行脚本的目的
      执行脚本:remote_scenario_param.sh

  1.4 批量远程执行脚本
      功能简介:用户可以通过给定文件:hostlist.txt 写入自定义的ip列表,执行脚本，达到批量远程执行脚本的目的
      执行脚本:remote_scenario_bat.sh

2.拓展功能
  关于批量执行脚本的功能有以下的拓展，例如：
      1.3 是远程执行本地脚本
      实际执行时可能还有以下情形
  2.1 远程执行目标机器上的脚本
  
  2.2 远程执行脚本含有参数的情况

  2.3 关于远程机器状态的检测
      远程机器尤其是批量的机器，有时需要检测所有机器的在线状态
      例如，是否能够ping通
            ssh是否正常连接，因为有时不能正常ssh连接，可能目标机器已经死机

  2.4 常见操作
      例如，测试时，常需要提前安装一些专用的包，例如测试源，
            有时候需要检测目标机器的系统版本，内核版本等
            以及其他一些需要调研或积累的命令等


3.异常控制
  程序不能只考虑正常情况，为保证程序能够有较好的健壮性，需要做足够的异常处理，准确报错，便于调试程序，方便用户查看

4.日志管理
  需要做必要的日志处理，便于用户查看出错信息或一些关键信息如执行时间等

5.规模拓展
  批量管理目标机器前期采用单线程的处理，好处是：
  通常，目标机器数量不大，不太影响效率，
  例如只有10台一下的机器，速度可以接受，命令顺次执行，也能很清楚的看到程序的执行流程等。
  
  批量管理目标机器长远来看需要加入多线程处理的功能,原因是：
  当目标机器有几十台到上百台时，单线程模式处理起来可能比较耗时，这时需要进行多线程等相关处理,
  从而解决耗时的效率问题

6.常见操作
  6.1 远程执行脚本
      获取远程机器的系统信息
      sh remote_scenario_param.sh 10.20.42.32 common_cases/get_OSInfo.sh
      ----目录common_cases下存放常用的脚本

  6.2 


                   
           
